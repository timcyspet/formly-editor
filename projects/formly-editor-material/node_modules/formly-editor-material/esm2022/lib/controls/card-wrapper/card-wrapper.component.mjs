import { Component } from '@angular/core';
import { MatCard, MatCardContent, MatCardHeader, MatCardTitle } from '@angular/material/card';
import { FieldWrapper } from '@ngx-formly/core';
import * as i0 from "@angular/core";
export class CardWrapperComponent extends FieldWrapper {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: CardWrapperComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.1", type: CardWrapperComponent, isStandalone: true, selector: "app-card-wrapper", usesInheritance: true, ngImport: i0, template: "<mat-card>\r\n    <mat-card-header>\r\n        @if (to.cardTitle) {\r\n            <mat-card-title>{{ to.cardTitle }}</mat-card-title>\r\n        }\r\n    </mat-card-header>\r\n    <mat-card-content><ng-container #fieldComponent></ng-container></mat-card-content>\r\n</mat-card>\r\n", dependencies: [{ kind: "component", type: MatCard, selector: "mat-card", inputs: ["appearance"], exportAs: ["matCard"] }, { kind: "component", type: MatCardHeader, selector: "mat-card-header" }, { kind: "directive", type: MatCardTitle, selector: "mat-card-title, [mat-card-title], [matCardTitle]" }, { kind: "directive", type: MatCardContent, selector: "mat-card-content" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: CardWrapperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-card-wrapper', standalone: true, imports: [MatCard, MatCardHeader, MatCardTitle, MatCardContent], template: "<mat-card>\r\n    <mat-card-header>\r\n        @if (to.cardTitle) {\r\n            <mat-card-title>{{ to.cardTitle }}</mat-card-title>\r\n        }\r\n    </mat-card-header>\r\n    <mat-card-content><ng-container #fieldComponent></ng-container></mat-card-content>\r\n</mat-card>\r\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC13cmFwcGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Zvcm1seS1lZGl0b3ItbWF0ZXJpYWwvc3JjL2xpYi9jb250cm9scy9jYXJkLXdyYXBwZXIvY2FyZC13cmFwcGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Zvcm1seS1lZGl0b3ItbWF0ZXJpYWwvc3JjL2xpYi9jb250cm9scy9jYXJkLXdyYXBwZXIvY2FyZC13cmFwcGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzlGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFRaEQsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFlBQVk7OEdBQXpDLG9CQUFvQjtrR0FBcEIsb0JBQW9CLG1HQ1ZqQyw0UkFRQSw0Q0RBYyxPQUFPLG9HQUFFLGFBQWEsNERBQUUsWUFBWSw2RkFBRSxjQUFjOzsyRkFFckQsb0JBQW9CO2tCQU5oQyxTQUFTOytCQUNJLGtCQUFrQixjQUVoQixJQUFJLFdBQ1AsQ0FBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWF0Q2FyZCwgTWF0Q2FyZENvbnRlbnQsIE1hdENhcmRIZWFkZXIsIE1hdENhcmRUaXRsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NhcmQnO1xyXG5pbXBvcnQgeyBGaWVsZFdyYXBwZXIgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtY2FyZC13cmFwcGVyJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9jYXJkLXdyYXBwZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICAgIGltcG9ydHM6IFtNYXRDYXJkLCBNYXRDYXJkSGVhZGVyLCBNYXRDYXJkVGl0bGUsIE1hdENhcmRDb250ZW50XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENhcmRXcmFwcGVyQ29tcG9uZW50IGV4dGVuZHMgRmllbGRXcmFwcGVyIHt9XHJcbiIsIjxtYXQtY2FyZD5cclxuICAgIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICAgICAgQGlmICh0by5jYXJkVGl0bGUpIHtcclxuICAgICAgICAgICAgPG1hdC1jYXJkLXRpdGxlPnt7IHRvLmNhcmRUaXRsZSB9fTwvbWF0LWNhcmQtdGl0bGU+XHJcbiAgICAgICAgfVxyXG4gICAgPC9tYXQtY2FyZC1oZWFkZXI+XHJcbiAgICA8bWF0LWNhcmQtY29udGVudD48bmctY29udGFpbmVyICNmaWVsZENvbXBvbmVudD48L25nLWNvbnRhaW5lcj48L21hdC1jYXJkLWNvbnRlbnQ+XHJcbjwvbWF0LWNhcmQ+XHJcbiJdfQ==